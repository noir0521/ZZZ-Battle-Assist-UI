// ---- Created with 3Dmigoto v1.3.16 on Sat Dec 21 22:38:04 2024
cbuffer cb2 : register(b2)
{
  float4 cb2[18];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[101];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float2 v3 : TEXCOORD1,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : COLOR0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD1,
  out float2 o4 : TEXCOORD2)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  v0.x += IniParams[180].x;
  v0.y += IniParams[180].y;
  v0.z += IniParams[180].z;
  v1.w *= IniParams[180].w;
  
  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw + r0.xyzw;
  r1.xyzw = cb0[98].xyzw * r0.yyyy;
  r1.xyzw = cb0[97].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb0[99].xyzw * r0.zzzz + r1.xyzw;
  o0.xyzw = cb0[100].xyzw * r0.wwww + r1.xyzw;
  o1.xyzw = cb2[3].xyzw * v1.xyzw;
  r0.w = 1 + -cb2[5].z;
  r1.xyzw = cmp(cb2[5].yyyy < float4(0.5,1.5,2.5,65504));
  r2.xyz = r1.xyz ? float3(-1,-1,-1) : float3(-0,-0,-0);
  r1.xyzw = r1.xyzw ? float4(1,1,1,1) : 0;
  r1.yzw = r1.yzw + r2.xyz;
  r1.yzw = max(float3(0,0,0), r1.yzw);
  r2.w = 1 + -cb2[5].z;
  r3.xyzw = v2.yxyx * float4(1,-1,-1,1) + float4(0,1,1,0);
  r4.xyzw = v2.xyxy * float4(1,1,-1,-1) + float4(0,0,1,1);
  r3.xyzw = -r4.xyzw + r3.xyzw;
  r5.xyzw = cb2[5].zzzz * r3.xyzw + r4.xyzw;
  r3.xyzw = cb2[15].xxxx * r3.xyzw + r4.xyzw;
  r2.xy = r5.xw;
  r2.z = 0;
  r4.xyzw = r2.xyzw * r1.zzzz;
  r0.xy = r5.zw;
  r0.z = 1;
  r4.xyzw = r0.xyzw * r1.wwww + r4.xyzw;
  r5.xz = r0.xz;
  r5.w = cb2[5].z;
  r0.xyzw = r5.xyzw * r1.yyyy + r4.xyzw;
  r2.yw = r5.yw;
  r0.xyzw = r2.xyzw * r1.xxxx + r0.xyzw;
  r0.xy = r0.xy + -r0.zw;
  r0.xy = r0.xy * cb2[1].xy + cb2[1].zw;
  r0.xy = r0.xy + r0.zw;
  r0.zw = cb2[6].xy * cb0[14].xx;
  r0.zw = frac(r0.zw);
  o2.xy = r0.xy + r0.zw;
  r0.xy = r3.zw;
  r0.w = 1 + -cb2[15].x;
  r1.xy = r3.xw;
  r1.w = 1 + -cb2[15].x;
  r2.xyzw = cmp(cb2[16].yyyy < float4(0.5,1.5,2.5,65504));
  r4.xyz = r2.xyz ? float3(-1,-1,-1) : float3(-0,-0,-0);
  r2.xyzw = r2.xyzw ? float4(1,1,1,1) : 0;
  r2.yzw = r2.yzw + r4.xyz;
  r2.yzw = max(float3(0,0,0), r2.yzw);
  r1.z = 0;
  r4.xyzw = r2.zzzz * r1.xyzw;
  r0.z = 1;
  r4.xyzw = r0.xyzw * r2.wwww + r4.xyzw;
  r3.xz = r0.xz;
  r3.w = cb2[15].x;
  r0.xyzw = r3.xyzw * r2.yyyy + r4.xyzw;
  r1.yw = r3.yw;
  r0.xyzw = r1.xyzw * r2.xxxx + r0.xyzw;
  r0.xy = r0.xy + -r0.zw;
  r0.xy = r0.xy * cb2[14].xy + cb2[14].zw;
  r0.xy = r0.xy + r0.zw;
  r0.zw = cb2[17].yz * cb0[14].xx;
  r0.zw = frac(r0.zw);
  o2.zw = r0.xy + r0.zw;
  o3.xyzw = v0.xyzw;
  r0.w = 1 + -cb2[8].x;
  r1.w = 1 + -cb2[8].x;
  r2.x = cmp(cb2[12].x < 0.5);
  r2.xy = r2.xx ? v2.xy : v3.xy;
  r2.zw = float2(1,1) + -r2.xy;
  r3.xyzw = r2.yzwx + -r2.xyzw;
  r2.xyzw = cb2[8].xxxx * r3.xyzw + r2.xyzw;
  r1.xy = r2.xw;
  r3.xyzw = cmp(cb2[9].xxxx < float4(0.5,1.5,2.5,65504));
  r4.xyz = r3.xyz ? float3(-1,-1,-1) : float3(-0,-0,-0);
  r3.xyzw = r3.xyzw ? float4(1,1,1,1) : 0;
  r3.yzw = r3.yzw + r4.xyz;
  r3.yzw = max(float3(0,0,0), r3.yzw);
  r1.z = 0;
  r4.xyzw = r3.zzzz * r1.xyzw;
  r0.xy = r2.zw;
  r0.z = 1;
  r4.xyzw = r0.xyzw * r3.wwww + r4.xyzw;
  r2.xz = r0.xz;
  r2.w = cb2[8].x;
  r0.xyzw = r2.xyzw * r3.yyyy + r4.xyzw;
  r1.yw = r2.yw;
  r0.xyzw = r1.xyzw * r3.xxxx + r0.xyzw;
  r0.xy = r0.xy + -r0.zw;
  r0.xy = r0.xy * cb2[7].xy + cb2[7].zw;
  r0.xy = r0.xy + r0.zw;
  r0.zw = cb2[9].yz * cb0[14].xx;
  r0.zw = frac(r0.zw);
  o4.xy = r0.xy + r0.zw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Dec 21 22:38:04 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyz         2     NONE   float   xy
// TEXCOORD                 1   xy          3     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xy          4     NONE   float   xy
//
vs_4_0
dcl_constantbuffer CB0[101], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_constantbuffer CB2[18], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 6
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mul r1.xyzw, r0.yyyy, cb0[98].xyzw
mad r1.xyzw, cb0[97].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb0[99].xyzw, r0.zzzz, r1.xyzw
mad o0.xyzw, cb0[100].xyzw, r0.wwww, r1.xyzw
mul o1.xyzw, v1.xyzw, cb2[3].xyzw
add r0.w, -cb2[5].z, l(1.000000)
lt r1.xyzw, cb2[5].yyyy, l(0.500000, 1.500000, 2.500000, 65504.000000)
movc r2.xyz, r1.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.yzw, r2.xxyz, r1.yyzw
max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.w, -cb2[5].z, l(1.000000)
mad r3.xyzw, v2.yxyx, l(1.000000, -1.000000, -1.000000, 1.000000), l(0.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyzw, v2.xyxy, l(1.000000, 1.000000, -1.000000, -1.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
add r3.xyzw, r3.xyzw, -r4.xyzw
mad r5.xyzw, cb2[5].zzzz, r3.xyzw, r4.xyzw
mad r3.xyzw, cb2[15].xxxx, r3.xyzw, r4.xyzw
mov r2.xy, r5.xwxx
mov r2.z, l(0)
mul r4.xyzw, r1.zzzz, r2.xyzw
mov r0.xy, r5.zwzz
mov r0.z, l(1.000000)
mad r4.xyzw, r0.xyzw, r1.wwww, r4.xyzw
mov r5.xz, r0.xxzx
mov r5.w, cb2[5].z
mad r0.xyzw, r5.xyzw, r1.yyyy, r4.xyzw
mov r2.yw, r5.yyyw
mad r0.xyzw, r2.xyzw, r1.xxxx, r0.xyzw
add r0.xy, -r0.zwzz, r0.xyxx
mad r0.xy, r0.xyxx, cb2[1].xyxx, cb2[1].zwzz
add r0.xy, r0.zwzz, r0.xyxx
mul r0.zw, cb0[14].xxxx, cb2[6].xxxy
frc r0.zw, r0.zzzw
add o2.xy, r0.zwzz, r0.xyxx
mov r0.xy, r3.zwzz
add r0.w, -cb2[15].x, l(1.000000)
mov r1.xy, r3.xwxx
add r1.w, -cb2[15].x, l(1.000000)
lt r2.xyzw, cb2[16].yyyy, l(0.500000, 1.500000, 2.500000, 65504.000000)
movc r4.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
add r2.yzw, r4.xxyz, r2.yyzw
max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r1.z, l(0)
mul r4.xyzw, r1.xyzw, r2.zzzz
mov r0.z, l(1.000000)
mad r4.xyzw, r0.xyzw, r2.wwww, r4.xyzw
mov r3.xz, r0.xxzx
mov r3.w, cb2[15].x
mad r0.xyzw, r3.xyzw, r2.yyyy, r4.xyzw
mov r1.yw, r3.yyyw
mad r0.xyzw, r1.xyzw, r2.xxxx, r0.xyzw
add r0.xy, -r0.zwzz, r0.xyxx
mad r0.xy, r0.xyxx, cb2[14].xyxx, cb2[14].zwzz
add r0.xy, r0.zwzz, r0.xyxx
mul r0.zw, cb0[14].xxxx, cb2[17].yyyz
frc r0.zw, r0.zzzw
add o2.zw, r0.zzzw, r0.xxxy
mov o3.xyzw, v0.xyzw
add r0.w, -cb2[8].x, l(1.000000)
add r1.w, -cb2[8].x, l(1.000000)
lt r2.x, cb2[12].x, l(0.500000)
movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
add r2.zw, -r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
add r3.xyzw, -r2.xyzw, r2.yzwx
mad r2.xyzw, cb2[8].xxxx, r3.xyzw, r2.xyzw
mov r1.xy, r2.xwxx
lt r3.xyzw, cb2[9].xxxx, l(0.500000, 1.500000, 2.500000, 65504.000000)
movc r4.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
add r3.yzw, r4.xxyz, r3.yyzw
max r3.yzw, r3.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r1.z, l(0)
mul r4.xyzw, r1.xyzw, r3.zzzz
mov r0.xy, r2.zwzz
mov r0.z, l(1.000000)
mad r4.xyzw, r0.xyzw, r3.wwww, r4.xyzw
mov r2.xz, r0.xxzx
mov r2.w, cb2[8].x
mad r0.xyzw, r2.xyzw, r3.yyyy, r4.xyzw
mov r1.yw, r2.yyyw
mad r0.xyzw, r1.xyzw, r3.xxxx, r0.xyzw
add r0.xy, -r0.zwzz, r0.xyxx
mad r0.xy, r0.xyxx, cb2[7].xyxx, cb2[7].zwzz
add r0.xy, r0.zwzz, r0.xyxx
mul r0.zw, cb0[14].xxxx, cb2[9].yyyz
frc r0.zw, r0.zzzw
add o4.xy, r0.zwzz, r0.xyxx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
