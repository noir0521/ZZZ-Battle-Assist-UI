// ---- Created with 3Dmigoto v1.3.16 on Sat Dec 21 19:14:39 2024
cbuffer cb2 : register(b2)
{
  float4 cb2[16];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[134];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float2 v3 : TEXCOORD1,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : COLOR0,
  out float2 o2 : TEXCOORD0,
  out float2 p2 : TEXCOORD2)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  v0.x += IniParams[180].x;
  v0.y += IniParams[180].y;
  v0.z += IniParams[180].z;
  v1.w *= IniParams[180].w;
  
  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw + r0.xyzw;
  r1.xyzw = cb0[98].xyzw * r0.yyyy;
  r1.xyzw = cb0[97].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb0[99].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb0[100].xyzw * r0.wwww + r1.xyzw;
  o0.xyzw = r0.xyzw;
  r0.xyz = r0.xyx / r0.www;
  o1.xyzw = cb2[4].xyzw * v1.xyzw;
  r0.w = 0.5 * r0.z;
  r1.yzw = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,-0.5);
  r0.x = cb0[133].x * r0.w;
  r0.x = r0.x * cb0[133].w + 0.5;
  r0.y = cb0[133].x * cb0[133].w;
  r0.y = r1.y * r0.y;
  r2.xyz = cmp(float3(2.5,1.5,0.5) < cb2[15].zzz);
  r0.y = r2.z ? r0.y : r1.y;
  r0.x = r2.y ? r0.x : r0.y;
  r0.y = cb0[133].x * r1.w;
  r0.y = r0.y * cb0[133].w + 1;
  r1.x = r2.x ? r0.y : r0.x;
  r0.xy = r1.xz * cb2[10].xy + cb2[10].zw;
  r0.zw = cmp(cb2[15].yy < float2(0.5,1.5));
  r0.xy = r0.ww ? v3.xy : r0.xy;
  r1.xy = v2.xy * cb2[0].xy + cb2[0].zw;
  p2.xy = r0.zz ? r1.xy : r0.xy;
  o2.xy = r1.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Dec 21 19:14:39 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// TEXCOORD                 1   xy          3     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// TEXCOORD                 2     zw        2     NONE   float     zw
//
vs_4_0
dcl_constantbuffer CB0[134], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_constantbuffer CB2[16], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_temps 3
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mul r1.xyzw, r0.yyyy, cb0[98].xyzw
mad r1.xyzw, cb0[97].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb0[99].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb0[100].xyzw, r0.wwww, r1.xyzw
mov o0.xyzw, r0.xyzw
div r0.xyz, r0.xyxx, r0.wwww
mul o1.xyzw, v1.xyzw, cb2[4].xyzw
mul r0.w, r0.z, l(0.500000)
mad r1.yzw, r0.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, -0.500000)
mul r0.x, r0.w, cb0[133].x
mad r0.x, r0.x, cb0[133].w, l(0.500000)
mul r0.y, cb0[133].w, cb0[133].x
mul r0.y, r0.y, r1.y
lt r2.xyz, l(2.500000, 1.500000, 0.500000, 0.000000), cb2[15].zzzz
movc r0.y, r2.z, r0.y, r1.y
movc r0.x, r2.y, r0.x, r0.y
mul r0.y, r1.w, cb0[133].x
mad r0.y, r0.y, cb0[133].w, l(1.000000)
movc r1.x, r2.x, r0.y, r0.x
mad r0.xy, r1.xzxx, cb2[10].xyxx, cb2[10].zwzz
lt r0.zw, cb2[15].yyyy, l(0.000000, 0.000000, 0.500000, 1.500000)
movc r0.xy, r0.wwww, v3.xyxx, r0.xyxx
mad r1.xy, v2.xyxx, cb2[0].xyxx, cb2[0].zwzz
movc o2.zw, r0.zzzz, r1.xxxy, r0.xxxy
mov o2.xy, r1.xyxx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
