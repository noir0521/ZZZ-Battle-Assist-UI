// ---- Created with 3Dmigoto v1.3.16 on Sat Dec 21 23:29:59 2024
cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[101];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  float4 v3 : TANGENT0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : COLOR0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD2)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;
  
  o2.zw = float2(0,0);
  v0.x += IniParams[180].x;
  v0.y += IniParams[180].y;
  v0.z += IniParams[180].z;
  v1.w *= IniParams[180].w;
  
  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw + r0.xyzw;
  r1.xyzw = cb0[98].xyzw * r0.yyyy;
  r1.xyzw = cb0[97].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb0[99].xyzw * r0.zzzz + r1.xyzw;
  o0.xyzw = cb0[100].xyzw * r0.wwww + r1.xyzw;
  o1.xyzw = cb2[3].xyzw * v1.xyzw;
  o2.xy = v2.xy;
  r0.xyz = cmp(cb2[11].xyz < float3(0.5,0.5,0.5));
  r0.xw = r0.xx ? v2.xy : v3.xy;
  r0.x = r0.y ? r0.x : r0.w;
  r0.y = 1 + -r0.x;
  o3.x = r0.z ? r0.x : r0.y;
  r0.x = cmp(cb2[10].y < 0.5);
  r1.xz = v3.zw;
  r1.yw = float2(1,1);
  r0.yz = v2.xy * r1.xy;
  r1.xy = v3.xy * r1.zw;
  r0.xy = r0.xx ? r0.yz : r1.xy;
  r0.xz = r0.xy * cb2[5].xy + cb2[5].zw;
  r0.xz = cb2[6].xy * cb0[14].xx + r0.xz;
  o3.z = cb2[10].z * r0.y + r0.x;
  o3.w = r0.z;
  o3.y = v3.z;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Dec 21 23:29:59 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// TANGENT                  0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer CB0[101], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_constantbuffer CB2[12], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyzw
dcl_temps 2
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mul r1.xyzw, r0.yyyy, cb0[98].xyzw
mad r1.xyzw, cb0[97].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb0[99].xyzw, r0.zzzz, r1.xyzw
mad o0.xyzw, cb0[100].xyzw, r0.wwww, r1.xyzw
mul o1.xyzw, v1.xyzw, cb2[3].xyzw
mov o2.xy, v2.xyxx
lt r0.xyz, cb2[11].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
movc r0.xw, r0.xxxx, v2.xxxy, v3.xxxy
movc r0.x, r0.y, r0.x, r0.w
add r0.y, -r0.x, l(1.000000)
movc o3.x, r0.z, r0.x, r0.y
lt r0.x, cb2[10].y, l(0.500000)
mov r1.xz, v3.zzwz
mov r1.yw, l(0,1.000000,0,1.000000)
mul r0.yz, r1.xxyx, v2.xxyx
mul r1.xy, r1.zwzz, v3.xyxx
movc r0.xy, r0.xxxx, r0.yzyy, r1.xyxx
mad r0.xz, r0.xxyx, cb2[5].xxyx, cb2[5].zzwz
mad r0.xz, cb2[6].xxyx, cb0[14].xxxx, r0.xxzx
mad o3.z, cb2[10].z, r0.y, r0.x
mov o3.w, r0.z
mov o3.y, v3.z
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
